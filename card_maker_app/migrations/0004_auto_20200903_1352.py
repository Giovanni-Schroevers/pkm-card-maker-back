# Generated by Django 3.1.1 on 2020-09-03 11:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('card_maker_app', '0003_passwordresettoken'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BaseSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'card_maker_app_base_set',
            },
        ),
        migrations.CreateModel(
            name='Move',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('damage', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('has_name_outline', models.BooleanField()),
                ('has_black_top_text', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RarityIcon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'card_maker_app_rarity_icon',
            },
        ),
        migrations.CreateModel(
            name='Rotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('has_prevolve', models.BooleanField()),
                ('has_pokedex_entry', models.BooleanField()),
                ('has_description', models.BooleanField()),
                ('has_white_top_text', models.BooleanField()),
                ('has_v_style', models.BooleanField()),
                ('has_v_symbol', models.BooleanField()),
                ('has_name_outline', models.BooleanField()),
                ('has_vmax_symbol', models.BooleanField()),
                ('rarities', models.ManyToManyField(related_name='subtypes', to='card_maker_app.Rarity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='photo',
            field=models.FileField(blank=True, null=True, upload_to='profile/'),
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('subtype_required', models.BooleanField()),
                ('has_white_text', models.BooleanField()),
                ('has_sub_name', models.BooleanField()),
                ('has_special_style', models.BooleanField()),
                ('is_energy', models.BooleanField()),
                ('rarities', models.ManyToManyField(related_name='types', to='card_maker_app.Rarity')),
                ('subtypes', models.ManyToManyField(related_name='types', to='card_maker_app.Subtype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supertype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('subtypes', models.ManyToManyField(related_name='supertypes', to='card_maker_app.Subtype')),
                ('types', models.ManyToManyField(related_name='supertypes', to='card_maker_app.Type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='subtype',
            name='variations',
            field=models.ManyToManyField(related_name='subtypes', to='card_maker_app.Variation'),
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('number', models.IntegerField()),
                ('base_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sets', to='card_maker_app.baseset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MoveEnergyCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('move', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='energy_cost', to='card_maker_app.move')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.type')),
            ],
            options={
                'db_table': 'card_maker_app_move_energy_cost',
            },
        ),
        migrations.AddField(
            model_name='move',
            name='types',
            field=models.ManyToManyField(related_name='move_energy_cost', through='card_maker_app.MoveEnergyCost', to='card_maker_app.Type'),
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sub_name', models.CharField(blank=True, max_length=255, null=True)),
                ('hit_points', models.IntegerField(blank=True, null=True)),
                ('card_number', models.CharField(blank=True, max_length=255, null=True)),
                ('total_cards', models.CharField(blank=True, max_length=255, null=True)),
                ('illustrator', models.CharField(blank=True, max_length=255, null=True)),
                ('weakness_amount', models.IntegerField(blank=True, null=True)),
                ('resistance_amount', models.IntegerField(blank=True, null=True)),
                ('retreat_cost', models.IntegerField(blank=True, null=True)),
                ('pokedex_entry', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('prevolve_name', models.CharField(blank=True, max_length=255, null=True)),
                ('background_image', models.FileField(blank=True, null=True, upload_to='card/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])])),
                ('card_image', models.ImageField(blank=True, null=True, upload_to='card/')),
                ('top_image', models.ImageField(blank=True, null=True, upload_to='card/')),
                ('type_image', models.ImageField(blank=True, null=True, upload_to='card/')),
                ('prevolve_image', models.ImageField(blank=True, null=True, upload_to='card/')),
                ('custom_set_image', models.ImageField(blank=True, null=True, upload_to='card/')),
                ('full_card_image', models.ImageField(upload_to='card/')),
                ('ability', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='card_maker_app.ability')),
                ('base_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.baseset')),
                ('move_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='card_move1', to='card_maker_app.move')),
                ('move_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='card_move2', to='card_maker_app.move')),
                ('move_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='card_move3', to='card_maker_app.move')),
                ('rarity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.rarity')),
                ('rarity_icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.rarityicon')),
                ('resistance_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='card_resistance', to='card_maker_app.type')),
                ('rotation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.rotation')),
                ('set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.set')),
                ('subtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.subtype')),
                ('supertype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.supertype')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='card_type', to='card_maker_app.type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='card_maker_app.variation')),
                ('weakness_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='card_weakness', to='card_maker_app.type')),
            ],
        ),
    ]
